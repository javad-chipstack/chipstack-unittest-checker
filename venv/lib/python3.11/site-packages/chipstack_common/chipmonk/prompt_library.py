"""Utility functions for loading and instantiating prompt templates."""

import os

from functools import lru_cache
from string import Template


# The directory in which our prompt templates reside.
_PROMPT_TEMPLATES_DIR = os.path.abspath(
    os.path.join(os.path.dirname(__file__), "prompts")
)


@lru_cache
def get_prompt_text(prompt_name: str) -> str:
    """
    Return the text of a prompt file, such as "prompt_1".

    This is useful when the text does not contain template variables. `prompt_name` does
    not include the file extension.
    """
    prompt_file = os.path.join(_PROMPT_TEMPLATES_DIR, f"{prompt_name}.txt")
    with open(prompt_file, "r") as f:
        return f.read()


@lru_cache
def get_prompt_template(prompt_name: str) -> Template:
    """
    Return a Template from the text of a prompt file, such as "prompt_1".

    This is useful when the text DOES contain template variables. `prompt_name` does
    not include the file extension.
    """
    prompt_file = os.path.join(_PROMPT_TEMPLATES_DIR, f"{prompt_name}.txt")
    with open(prompt_file, "r") as f:
        return Template(f.read())


def render_prompt_template(prompt_name: str, **kwargs) -> str:
    """
    Render a prompt template with the given keyword arguments.

    This function is a convenience wrapper around `get_prompt_template` and `Template.substitute`.

    Example:
    ```
    render_prompt_template("prompt_1", name="Alice", age=30)
    ```
    """
    return get_prompt_template(prompt_name).substitute(**kwargs)
