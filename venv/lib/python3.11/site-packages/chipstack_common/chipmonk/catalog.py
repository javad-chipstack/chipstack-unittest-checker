"""A registry for the various versions of the Chipmonk task library."""

from chipstack_common.chipmonk.collection_library import ChipmonkTaskCollection
from typing import Dict, Optional, Type


def task_collection(version: str):
    """A decorator that registers a ChipmonkTaskCollection for a specific version."""

    def decorator(function: Type[ChipmonkTaskCollection]):
        ChipmonkCatalog.register(version, function)
        return function

    return decorator


class ChipmonkCatalog:
    """A registry for the various versions of the Chipmonk task library."""

    _registry: Dict[str, Type[ChipmonkTaskCollection]] = {}

    @classmethod
    def register(cls, version: str, task_library: Type[ChipmonkTaskCollection]):
        cls._registry[version] = task_library

    @classmethod
    def for_version(cls, version: str, **kwargs) -> Optional[ChipmonkTaskCollection]:
        task_library = cls._registry.get(version, None)
        if task_library is None:
            return None
        return task_library(**kwargs)
